# Signature
ctrl Room = 0;
ctrl Building = 0;
ctrl Comp = 1;

# some elementary bigraphs
# big join = id | id;
# big g11 = ([{1}, {0}], 2);

big s0 = Building . (Room.(Comp{network}.1) | Room.(Comp{network}.1));

big context = Building;
big r = Room | Room;
big d0 = Comp{n1}.1;
big d1 = Comp{n2}.1;
big d = d0 + d1;
big d' = d0 || d1;

big dpaper = Comp{network}.1 || Comp{network}.1;

big linkingId = network/{network};
big linking2 = network/{n1,n2}; #n1/{n1} + n2/{n2};
big redex = (r + linking2) * d;
big redexpaper = (r + linkingId) * dpaper;

big a = (network/{network} + id(1)) * Comp{network}.1;

# Reaction rules
#big bla = id(1) | id(1);
#big blu = /jeff + id(1);
react nil = Room --> Room;

#big phi = /{w0,w1} Printer{w0,w1}.1;

#big klo = /a (Computer{a}.1 | Computer{a}.1);
#big klo2 = /a/b (Computer{a}.1 | Computer{b}.1 | Job.1);

#react cp = klo --> klo2;

#big blu = Job || Job;


# Reactive system
begin brs
  init s0;
  rules = [ {nil} ];
end
